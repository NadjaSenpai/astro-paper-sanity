---
import { getPosts } from "@/lib/sanity";
import Layout from "@/layouts/Layout.astro";
import Card from "@/components/Card.astro";
import Main from "@/layouts/Main.astro";
import Header from "@/components/Header.astro";
import Footer from "@/components/Footer.astro";
import Pagination from "@/components/Pagination.astro";
import getSortedPosts from "@/utils/getSortedPosts";
import { getSiteConfig } from "@/lib/getSiteConfig";

const site = await getSiteConfig();

export async function getStaticPaths() {
  const allPosts = await getPosts();
  const tagMap = new Map();

  for (const post of allPosts) {
    if (!Array.isArray(post.tags)) continue;

    for (const tag of post.tags) {
      const slug =
        typeof tag?.slug === "object"
          ? tag.slug?.current
          : tag?.slug;

      if (!slug) {
        console.warn(`[WARN] タグ slug が無効:`, tag);
        continue;
      }

      if (!tagMap.has(slug)) tagMap.set(slug, []);
      tagMap.get(slug).push(post);
    }
  }

  return Array.from(tagMap.keys()).map(tag => ({ params: { tag } }));
}

const { tag } = Astro.params;
const allPosts = await getPosts();

const filtered = allPosts.filter(post =>
  post.tags?.some(t =>
    (typeof t.slug === "object" ? t.slug.current : t.slug) === tag
  )
);

const posts = filtered.slice(0, 10);
---

<Layout title={`Tag: ${tag} | ${site.title}`}>
<Header />
  <Main>
  <ul>
    {posts.map(post => (
      <Card
        title={post.title}
        slug={post.slug}
        pubDate={post.pubDate}
        description={post.description}
        modDate={post.modDate}
        tags={post.tags}
      />
    ))}
  </ul>
  </Main>
<Footer />
</Layout>
