---
import type { GetStaticPaths } from "astro";
import { getPosts } from "@/lib/sanity/";
import getSortedPosts from "@/utils/getSortedPosts";
import Layout from "@/layouts/Layout.astro";
import Header from "@/components/Header.astro";
import Footer from "@/components/Footer.astro";
import Main from "@/layouts/Main.astro";
import Card from "@/components/Card.astro";
import Pagination from "@/components/Pagination.astro";
import { getSiteConfig } from "@/lib/getSiteConfig";

const site = await getSiteConfig();

export const getStaticPaths: GetStaticPaths = async ({ paginate }) => {
  const site = await getSiteConfig();
  const rawPosts = await getPosts();

  const posts = getSortedPosts(
    rawPosts
      .filter(post => post?.pubDate)
      .map(post => ({
        ...post,
        pubDate: new Date(post.pubDate),
        modDate: post.modDate ? new Date(post.modDate) : undefined,
      }))
  );

  return paginate(posts, {
    pageSize: site.postPerPage ?? 4,
  });
};
// props から受け取る
const { page } = Astro.props;
const posts = page?.data ?? [];
---

<Layout title={`Posts | ${site.title}`}>
  <Header />

  <Main pageTitle="Posts" pageDesc="All the articles I've posted.">
    {Array.isArray(posts) && posts.length > 0 ? (
      <ul>
        {posts.map(post => (
          <Card
            title={post.title}
            slug={post.slug}
            pubDate={post.pubDate}
            modDate={post.modDate}
            description={post.description}
            tags={post.tags}
          />
        ))}
      </ul>
    ) : (
      <p>投稿が見つかりませんでした。</p>
    )}
    <Pagination page={page} basePath="/posts" />
  </Main>

  <Footer />
</Layout>
